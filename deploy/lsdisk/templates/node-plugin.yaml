apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Chart.Name }}-node
  namespace: {{ .Release.Namespace }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: "100%"
  selector:
    matchLabels:
{{ include "lsdisk.labels" . | indent 6 }}
      component: node
  template:
    metadata:
      labels:
{{ include "lsdisk.labels" . | indent 8 }}
        component: node
    spec:
      serviceAccountName: {{ .Chart.Name }}-driver
      priorityClassName: system-node-critical
      tolerations:
        - operator: "Exists"
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/lsdisk
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: DirectoryOrCreate
      containers:
        - name: csi-driver
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}
          env:
            - name: TZ
              value: {{ .Values.timezone | quote }}
            - name: PROVISIONER_NAME
              value: {{ .Values.provisionerName }}
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
        - name: node-driver-registrar
          image: {{ .Values.registrarImage }}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --health-port=9809
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/lsdisk/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: external-provisioner
          image: {{ .Values.provisionerImage }}
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
            - "--strict-topology"
            - "--immediate-topology=false"
            - "--timeout=120s"
            - "--enable-capacity=true"
            - "--capacity-ownerref-level=1"
            - "--node-deployment=true"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
