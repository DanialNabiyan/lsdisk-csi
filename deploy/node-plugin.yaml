apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: lsdisk-node
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: "100%"
  selector:
    matchLabels: 
      app.kubernetes.io/instance: lsdisk
      app.kubernetes.io/name: lsdisk
      component: node
  template:
    metadata:
      labels: 
        app.kubernetes.io/instance: lsdisk
        app.kubernetes.io/name: lsdisk
        component: node
    spec:
      serviceAccount: lsdisk-driver
      priorityClassName: system-node-critical
      tolerations:
        - operator: "Exists"
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/lsdisk
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: DirectoryOrCreate
      containers:
        - name: csi-driver
          image: danialnabiyan1382/lsdisk:v1.0.0.47
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          env:
            - name: TZ
              value: "Asia/Tehran"
            - name: PROVISIONER_NAME
              value: lsdisk.driver
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          ports:
            - name: csi-probe
              containerPort: 9808
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
          resources:
            limits:
              cpu: "1"
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 100Mi
        - name: node-driver-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.12.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --health-port=9809
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/lsdisk/csi.sock
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources:
            limits:
              cpu: 500m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 100Mi
        - name: external-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
            - "--strict-topology"
            - "--immediate-topology=false"
            - "--timeout=120s"
            - "--enable-capacity=true"
            - "--capacity-ownerref-level=1" # DaemonSet
            - "--node-deployment=true"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: socket-dir
              mountPath: /csi